//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add Extensions\MyQuantityExtensions.cs to decorate quantities with new behavior.
//     Add UnitDefinitions\MyQuantity.json and run GeneratUnits.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Copyright (c) 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com).
// https://github.com/angularsen/UnitsNet
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

using System;

// Windows Runtime Component does not support extension methods and method overloads: https://msdn.microsoft.com/en-us/library/br230301.aspx
#if !WINDOWS_UWP
namespace UnitsNet.Extensions.NumberToVolumeFlow
{
    public static class NumberToVolumeFlowExtensions
    {
        #region CentilitersPerMinute

        /// <inheritdoc cref="VolumeFlow.FromCentilitersPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow CentilitersPerMinute<T>(this T value) => VolumeFlow.FromCentilitersPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCentilitersPerMinute(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? CentilitersPerMinute<T>(this T? value) where T : struct => VolumeFlow.FromCentilitersPerMinute(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region CubicDecimeterPerMinute

        /// <inheritdoc cref="VolumeFlow.FromCubicDecimetersPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow CubicDecimetersPerMinute<T>(this T value) => VolumeFlow.FromCubicDecimetersPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCubicDecimetersPerMinute(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? CubicDecimetersPerMinute<T>(this T? value) where T : struct => VolumeFlow.FromCubicDecimetersPerMinute(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region CubicFootPerHour

        /// <inheritdoc cref="VolumeFlow.FromCubicFeetPerHour(UnitsNet.QuantityValue)" />
        public static VolumeFlow CubicFeetPerHour<T>(this T value) => VolumeFlow.FromCubicFeetPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCubicFeetPerHour(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? CubicFeetPerHour<T>(this T? value) where T : struct => VolumeFlow.FromCubicFeetPerHour(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region CubicFootPerMinute

        /// <inheritdoc cref="VolumeFlow.FromCubicFeetPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow CubicFeetPerMinute<T>(this T value) => VolumeFlow.FromCubicFeetPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCubicFeetPerMinute(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? CubicFeetPerMinute<T>(this T? value) where T : struct => VolumeFlow.FromCubicFeetPerMinute(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region CubicFootPerSecond

        /// <inheritdoc cref="VolumeFlow.FromCubicFeetPerSecond(UnitsNet.QuantityValue)" />
        public static VolumeFlow CubicFeetPerSecond<T>(this T value) => VolumeFlow.FromCubicFeetPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCubicFeetPerSecond(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? CubicFeetPerSecond<T>(this T? value) where T : struct => VolumeFlow.FromCubicFeetPerSecond(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region CubicMeterPerHour

        /// <inheritdoc cref="VolumeFlow.FromCubicMetersPerHour(UnitsNet.QuantityValue)" />
        public static VolumeFlow CubicMetersPerHour<T>(this T value) => VolumeFlow.FromCubicMetersPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCubicMetersPerHour(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? CubicMetersPerHour<T>(this T? value) where T : struct => VolumeFlow.FromCubicMetersPerHour(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region CubicMeterPerMinute

        /// <inheritdoc cref="VolumeFlow.FromCubicMetersPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow CubicMetersPerMinute<T>(this T value) => VolumeFlow.FromCubicMetersPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCubicMetersPerMinute(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? CubicMetersPerMinute<T>(this T? value) where T : struct => VolumeFlow.FromCubicMetersPerMinute(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region CubicMeterPerSecond

        /// <inheritdoc cref="VolumeFlow.FromCubicMetersPerSecond(UnitsNet.QuantityValue)" />
        public static VolumeFlow CubicMetersPerSecond<T>(this T value) => VolumeFlow.FromCubicMetersPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCubicMetersPerSecond(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? CubicMetersPerSecond<T>(this T? value) where T : struct => VolumeFlow.FromCubicMetersPerSecond(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region CubicYardPerHour

        /// <inheritdoc cref="VolumeFlow.FromCubicYardsPerHour(UnitsNet.QuantityValue)" />
        public static VolumeFlow CubicYardsPerHour<T>(this T value) => VolumeFlow.FromCubicYardsPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCubicYardsPerHour(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? CubicYardsPerHour<T>(this T? value) where T : struct => VolumeFlow.FromCubicYardsPerHour(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region CubicYardPerMinute

        /// <inheritdoc cref="VolumeFlow.FromCubicYardsPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow CubicYardsPerMinute<T>(this T value) => VolumeFlow.FromCubicYardsPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCubicYardsPerMinute(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? CubicYardsPerMinute<T>(this T? value) where T : struct => VolumeFlow.FromCubicYardsPerMinute(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region CubicYardPerSecond

        /// <inheritdoc cref="VolumeFlow.FromCubicYardsPerSecond(UnitsNet.QuantityValue)" />
        public static VolumeFlow CubicYardsPerSecond<T>(this T value) => VolumeFlow.FromCubicYardsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromCubicYardsPerSecond(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? CubicYardsPerSecond<T>(this T? value) where T : struct => VolumeFlow.FromCubicYardsPerSecond(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region DecilitersPerMinute

        /// <inheritdoc cref="VolumeFlow.FromDecilitersPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow DecilitersPerMinute<T>(this T value) => VolumeFlow.FromDecilitersPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromDecilitersPerMinute(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? DecilitersPerMinute<T>(this T? value) where T : struct => VolumeFlow.FromDecilitersPerMinute(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region KilolitersPerMinute

        /// <inheritdoc cref="VolumeFlow.FromKilolitersPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow KilolitersPerMinute<T>(this T value) => VolumeFlow.FromKilolitersPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromKilolitersPerMinute(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? KilolitersPerMinute<T>(this T? value) where T : struct => VolumeFlow.FromKilolitersPerMinute(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region KilousGallonsPerMinute

        /// <inheritdoc cref="VolumeFlow.FromKilousGallonsPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow KilousGallonsPerMinute<T>(this T value) => VolumeFlow.FromKilousGallonsPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromKilousGallonsPerMinute(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? KilousGallonsPerMinute<T>(this T? value) where T : struct => VolumeFlow.FromKilousGallonsPerMinute(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region LitersPerHour

        /// <inheritdoc cref="VolumeFlow.FromLitersPerHour(UnitsNet.QuantityValue)" />
        public static VolumeFlow LitersPerHour<T>(this T value) => VolumeFlow.FromLitersPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromLitersPerHour(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? LitersPerHour<T>(this T? value) where T : struct => VolumeFlow.FromLitersPerHour(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region LitersPerMinute

        /// <inheritdoc cref="VolumeFlow.FromLitersPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow LitersPerMinute<T>(this T value) => VolumeFlow.FromLitersPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromLitersPerMinute(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? LitersPerMinute<T>(this T? value) where T : struct => VolumeFlow.FromLitersPerMinute(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region LitersPerSecond

        /// <inheritdoc cref="VolumeFlow.FromLitersPerSecond(UnitsNet.QuantityValue)" />
        public static VolumeFlow LitersPerSecond<T>(this T value) => VolumeFlow.FromLitersPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromLitersPerSecond(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? LitersPerSecond<T>(this T? value) where T : struct => VolumeFlow.FromLitersPerSecond(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region MicrolitersPerMinute

        /// <inheritdoc cref="VolumeFlow.FromMicrolitersPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow MicrolitersPerMinute<T>(this T value) => VolumeFlow.FromMicrolitersPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromMicrolitersPerMinute(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? MicrolitersPerMinute<T>(this T? value) where T : struct => VolumeFlow.FromMicrolitersPerMinute(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region MillilitersPerMinute

        /// <inheritdoc cref="VolumeFlow.FromMillilitersPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow MillilitersPerMinute<T>(this T value) => VolumeFlow.FromMillilitersPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromMillilitersPerMinute(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? MillilitersPerMinute<T>(this T? value) where T : struct => VolumeFlow.FromMillilitersPerMinute(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region MillionUsGallonsPerDay

        /// <inheritdoc cref="VolumeFlow.FromMillionUsGallonsPerDay(UnitsNet.QuantityValue)" />
        public static VolumeFlow MillionUsGallonsPerDay<T>(this T value) => VolumeFlow.FromMillionUsGallonsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromMillionUsGallonsPerDay(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? MillionUsGallonsPerDay<T>(this T? value) where T : struct => VolumeFlow.FromMillionUsGallonsPerDay(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region NanolitersPerMinute

        /// <inheritdoc cref="VolumeFlow.FromNanolitersPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow NanolitersPerMinute<T>(this T value) => VolumeFlow.FromNanolitersPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromNanolitersPerMinute(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? NanolitersPerMinute<T>(this T? value) where T : struct => VolumeFlow.FromNanolitersPerMinute(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region OilBarrelsPerDay

        /// <inheritdoc cref="VolumeFlow.FromOilBarrelsPerDay(UnitsNet.QuantityValue)" />
        public static VolumeFlow OilBarrelsPerDay<T>(this T value) => VolumeFlow.FromOilBarrelsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromOilBarrelsPerDay(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? OilBarrelsPerDay<T>(this T? value) where T : struct => VolumeFlow.FromOilBarrelsPerDay(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region OilBarrelsPerHour

        /// <inheritdoc cref="VolumeFlow.FromOilBarrelsPerHour(UnitsNet.QuantityValue)" />
        public static VolumeFlow OilBarrelsPerHour<T>(this T value) => VolumeFlow.FromOilBarrelsPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromOilBarrelsPerHour(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? OilBarrelsPerHour<T>(this T? value) where T : struct => VolumeFlow.FromOilBarrelsPerHour(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region OilBarrelsPerMinute

        /// <inheritdoc cref="VolumeFlow.FromOilBarrelsPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow OilBarrelsPerMinute<T>(this T value) => VolumeFlow.FromOilBarrelsPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromOilBarrelsPerMinute(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? OilBarrelsPerMinute<T>(this T? value) where T : struct => VolumeFlow.FromOilBarrelsPerMinute(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region UsGallonsPerHour

        /// <inheritdoc cref="VolumeFlow.FromUsGallonsPerHour(UnitsNet.QuantityValue)" />
        public static VolumeFlow UsGallonsPerHour<T>(this T value) => VolumeFlow.FromUsGallonsPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromUsGallonsPerHour(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? UsGallonsPerHour<T>(this T? value) where T : struct => VolumeFlow.FromUsGallonsPerHour(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region UsGallonsPerMinute

        /// <inheritdoc cref="VolumeFlow.FromUsGallonsPerMinute(UnitsNet.QuantityValue)" />
        public static VolumeFlow UsGallonsPerMinute<T>(this T value) => VolumeFlow.FromUsGallonsPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromUsGallonsPerMinute(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? UsGallonsPerMinute<T>(this T? value) where T : struct => VolumeFlow.FromUsGallonsPerMinute(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region UsGallonsPerSecond

        /// <inheritdoc cref="VolumeFlow.FromUsGallonsPerSecond(UnitsNet.QuantityValue)" />
        public static VolumeFlow UsGallonsPerSecond<T>(this T value) => VolumeFlow.FromUsGallonsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeFlow.FromUsGallonsPerSecond(UnitsNet.QuantityValue)" />
        [Obsolete("Nullable type support has been deprecated and will be removed in a future release.")]
        public static VolumeFlow? UsGallonsPerSecond<T>(this T? value) where T : struct => VolumeFlow.FromUsGallonsPerSecond(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

    }
}
#endif
